index:
  head: Hi, I'm Mika.
  body: |
        I’m a software developer currently alive in Berlin, Germany.
        Professionally, I am an engineer at
        [GEÞEODAN :: https://crate.io/ :: Crate.io], a start-up building a
        horizontally scalable SQL database based on technologies like Elasticsearch,
        Netty and Apache Lucene. At the moment I work a lot with scalable infrastructure,
        using Kubernetes, SaltStack, Docker and CrateDB.

        In my free time, I’m working on building my own small and self-indulgent
        productivity tools, of which this project documentation repository is
        one. I am also an occasional contributor to the
        [GEÞEODAN :: https://github.com/ambv/black :: Black] python formatter
        project.

        Outside of cobbling together software, I mostly like to read on
        technology, infrastructure, cybernetics and solarpunk.
  foot: Heorot eardode, sincfáge sel sweartum nihtum.


# Project Leomu

regn:
  name: Regn
  brief: Weather Station
  project: true
  status: In Dev
  head: Regn is a microcontroller based weather station.
  body: |
        This project consists of 2 main components, the server side and the
        weather station.

        The weather station is a small, WiFi enabled IoT device built with
        an [GEÞEODAN :: https://cdn-learn.adafruit.com/downloads/pdf/adafruit-huzzah-esp8266-breakout.pdf :: Adafruit HUZZAH ESP8266],
        a [GEÞEODAN :: https://www.sparkfun.com/datasheets/Sensors/Temperature/DHT22.pdf :: DHT22 temperature + humidity sensor],
        a [GEÞEODAN :: https://cdn-shop.adafruit.com/datasheets/BST-BMP180-DS000-09.pdf :: BMP180 barometric pressure sensor]
        and a [GEÞEODAN :: https://cdn-shop.adafruit.com/datasheets/TSL2561.pdf :: TSL2561 luminosity/lux/light sensor]
        to read various environmental properties. It then connects to a
        predefined endpoint and posts a JSON payload, with an API token.

        The server side is a Flask instance serving up both a dashboard and an
        api. Using the api (such as [GEÞEODAN :: https://regn.autophagy.io/api/latest :: /api/latest])
        the dashboard constructs a real time graph of temperature/humidity/pressure/luminosity
        over a day/week/month/year.

        At the moment, the weather station is powered via the mains, but I will
        soon make it autonomous with a LiPo battery and solar panel set up.
  externals:
    source: https://github.com/autophagy/regn
    website: https://regn.autophagy.io

ametan:
  name: Ametan
  brief: Android Scrum App
  project: true
  status: 1.1.0
  head: Ametan is an Android app for scrum estimation planning poker.
  body: |
        Planning poker is an exercise I regularly take part in with my
        colleagues in order to determine the complexity of stories that we will
        undertake during a sprint. The procedure is to estimate the complexity
        of a story from a set of 0, 1/2, 1, 2, 3, 5, 8, 13, 20, 40, 100, ∞ and ?.
        Each team member's estimation is then revealed at the same time, in order
        to minimise influence from other members. The highest and the lowest
        estimations are then discussed, and a consensus is reached over several
        estimation rounds.

        There are many Android apps that facilitate this, but none that I had
        encountered quite suited my aesthetic tastes, so I decided to build one
        for myself.

        This was also an exercise in Android development, Kotlin and learning
        the names for numbers in Old English.
  externals:
    source: https://github.com/autophagy/ametan
    google play store: https://play.google.com/store/apps/details?id=io.autophagy.ametan
    documentation: https://ametan.readthedocs.io/en/latest

wisdomhord:
  name: Wísdómhord
  brief: Flat File DB
  project: true
  status: 0.2.3
  head: Wísdómhord is a flat file database tool for internal project use.
  body: |
        The main goal of Wísdómhord is to create a flat file db format that
        produces files that are in line with my aesthetics, are easy to read and
        make sense to check into Github.

        An example hord looks like:

        [GEWISSUNG]
        // INVOKER :: Wísdómhord
        // DESCRIPTION :: An example hord
        // INCEPT :: 10 Regn 226 // 05.00
        // UPDATED :: 10 Regn 226 // 05.40
        // COUNT :: 7

        [ COL1          | COL2  | COL3  | COL4        ]
        [ Hello world   | 12345 | True  | Wé          ]
        [ Wes Hál       | 67890 | False | Gárdena     ]
        [ Hallo Welt    | 123   | True  | in          ]
        [ Saluton mondo | 34.2  | False | géardagum   ]
        [ qo' vIvan     | 42    | True  | þéodcyninga ]
        [ Suilad ambar  | 1968  |       | þrym        ]
        [ Ada mūnok     |       | True  | gefrúnon    ]
        [GEWISSUNGENDE]

        Wísdómhord is intended to be the primary data store of
        [GEÞEODAN :: /faereld :: Færeld], and subsequently the data store that
        [GEÞEODAN :: /hraew :: Hrǽw] uses to display task data for each project.
  externals:
      source: https://github.com/autophagy/wisdomhord
      documentation: https://wisdomhord.readthedocs.io/en/latest/

getheode:
  name: Geþeóde
  brief: Conlanging Tool
  project: true
  status: In Dev
  head: Geþeóde is a tool for language construction.
  body: |
        Geþeóde is a conlanging tool I am building with
        [GEÞEODAN :: https://twitter.com/McCaineNL :: Matthijs Krul] to be used,
        initially, in the construction of lexicons.It is being built in a modular
        way, allowing us to add functionality to the tool in order to support more
        and more language creation aspects.

        It is being built with React and in the future will be an independent
        Electron app.
  externals:
    source: https://github.com/autophagy/getheode

scieldas:
  name: Scieldas
  brief: Metadata Badges
  project: true
  status: 0.1.0
  head: Scieldas is a service to provide metadata badges for Open Source projects.
  body: |
        Inspired by services like [GEÞEODAN :: https://shields.io/ :: Shields.io],
        I created my own metadata badges service to provide dynamic badges for endpoints
        like Travis, Docker and ReadTheDocs build statuses that were in line with
        my projects' aesthetic direction.

        The service is built with Flask and runs as a Docker container, allowing
        for easy scaling with demand, since the service itself is stateless and
        gets its information via the public APIs of the relevant services.

        Scieldas currently supports Travis CI, ReadTheDocs, the Python Package
        Index (both the current latest package version and the supported Python
        versions) and Docker Hub. It also exposes an endpoint to create licence
        badges, currently Apache 2, GPL 3 and MIT.
  externals:
    source: https://github.com/autophagy/scieldas
    endpoint: http://scieldas.autophagy.io
    docker hub: https://hub.docker.com/r/autophagy/scieldas/
    documentation: https://scieldas.readthedocs.io/en/latest/

hraew:
  name: Hrǽw
  brief: Project Information Engine
  project: true
  status: In Dev
  head: Hrǽw is a project information & documentation engine.
  body: |
        Inspired by projects such as
        [GEÞEODAN :: http://wiki.xxiivv.com/ :: Devine Lu Linvega's Oscean] and
        [GEÞEODAN :: https://joshavanier.github.io/wiki/ :: Josh Avanier's Memex],
        Hrǽw is a project information engine built with Flask to facilitate
        cataloguing of my projects. It uses a custom parsing engine to translate
        simple texts with tags into HTML. It is also designed to incorporate
        data produced by [GEÞEODAN :: /faereld :: Færeld] so that summaries of
        project activity can be built and visualised.

        Although intended to be served as a Flask instance (currently on Heroku),
        Hrǽw also has the ability to be "frozen" into a static site. This allows
        me to also have a static version of Hrǽw in
        [GEÞEODAN :: dat://hraew.autophagy.io :: the P2P web] via the
        [GEÞEODAN :: https://datproject.org/ :: Dat Protocol].

        Hrǽw is intended to fulfil several functions. The first is to act as a
        portfolio of sorts - a consistent catalogue of my personal projects.
        Secondly, it is intended as a way of generating Færeld visualisations in
        a way that would be impractical with its CLI. Lastly, it is intended to
        function as a self-esteem booster, an indicator that I am spending my time
        on useful and interesting stuff.

        In the future, Hrǽw may expand to contain not only information about my
        personal projects, but perhaps more information about me generally.
  externals:
      source: https://github.com/Autophagy/hraew
      website: https://hraew.autophagy.io/
      P2P: dat://hraew.autophagy.io/

faereld:
  name: Færeld
  brief: Time Tracker
  project: true
  status: In Dev
  head: Færeld is a CLI time tracking tool.
  body: |
        Færeld is a tool built to facilitate tracking the time I spend on my own
        projects and self-improvement. It also provides various visualisation
        modes for the data it produces, allowing me to analyse and optimise
        my behaviour.

        It is focused, primarily, around tracking time spent on project areas
        (which I have defined as RESearch, DESign, DEVelopment, DOCumentation
        and TeSTing), but is also being used to track my reading, languages
        and conference/meetup/etc engagements.

        I have written up my motivations for making Færeld on
        [GEÞEODAN :: https://completablefutures.org/time-tracking-with-faereld/ :: Completable Futures].
  externals:
    source: https://github.com/autophagy/faereld
    documentation: https://faereld.readthedocs.io/en/latest/

insegel:
  name: Insegel
  brief: Sphinx Theme
  project: true
  status: 0.2.1
  head: Insegel is a theme for the Sphinx documentation engine.
  body: |
        Insegel is a theme for [GEÞEODAN :: http://www.sphinx-doc.org/en/stable/ :: Sphinx],
        a Python based documentation engine. The theme itself can be deployed
        anywhere, but has specific enhancements for hosting on
        [GEÞEODAN :: https://readthedocs.org/ :: ReadTheDocs].

        It provides a mobile-friendly, monochrome 2 column layout with an
        emphasis on typographical legibility and consistency. It also, optionally,
        integrates [GEÞEODAN :: /datarum :: Datárum] for displaying the last
        built date of the documentation.
  externals:
    source: https://github.com/autophagy/insegel
    package: https://pypi.python.org/pypi/insegel/
    documentation: https://insegel.readthedocs.io/en/latest/

datarum:
  name: Datárum
  brief: Calendar System
  project: true
  status: 0.5.0
  head: Datárum is a calendar system based on the French Republican Calendar.
  body: |
        Datárum is is a modified version of the French Republican Calendar,
        with the months loosely translated from the original French to Old
        English. I'm a fan of the political and rationalist underpinnings of
        the Republican calendar, and my version puts my own aesthetic spin on
        it.

        [CUNNUNGARC]
        [               | FRENCH         | OLD ENGLISH | TRANSLATION                 ]
        [ Autumn        | Vendémiaire    | Hærfest     | Harvest, autumn             ]
        [               | Brumaire       | Mist        | Mist, fog                   ]
        [               | Frimaire       | Forst       | Frost                       ]
        [ Winter        | Nivôse         | Snáw        | Snow                        ]
        [               | Pluviôse       | Reg         | Rain                        ]
        [               | Ventôse        | Wind        | Wind                        ]
        [ Spring        | Germinal       | Sǽd         | Seed                        ]
        [               | Floréal        | Blóstm      | Blossom, flower             ]
        [               | Prairial       | Mǽdland     | Meadow-land                 ]
        [ Summer        | Messidor       | Ríp         | Reaping, harvest            ]
        [               | Thermidor      | Hát         | Heat                        ]
        [               | Fructidor      | Wæstm       | Growth, produce, fruit      ]
        [ Complementary | Sansculottides | Wending     | A turning round, revolution ]

        It is deployed as a Python 3 library so that it can be integrated into
        projects such as [GEÞEODAN :: /faereld :: Færeld],
        [GEÞEODAN :: /insegel :: Insegel] and [GEÞEODAN :: /hraew :: Hrǽw].
  externals:
      source: https://github.com/Autophagy/datarum
      package: https://pypi.python.org/pypi/datarum/
      documentation: https://datarum.readthedocs.io/en/latest/

aerende:
  name: Ærende
  brief: Console Notes
  project: true
  status: 0.2.0
  head: Ærende is a CLI note taking application.
  body: |
        Ærende is designed to slot seamlessly into my terminal window workflow,
        and gives me the ability to record and prioritise reminders and notes
        while I'm working.

        It was built as an exercise in terminal user interfaces, specifically
        with the [GEÞEODAN :: http://urwid.org/ :: Urwid] library.
  externals:
    source: https://github.com/autophagy/aerende
    documentation: https://aerende.readthedocs.io/en/latest/

antimber:
  name: Antimber
  brief: Arch Linux Themes
  project: true
  status: Ongoing
  head: Antimber is a set of configuration files for Arch Linux.
  body: |
        Antimber is a collection of themes that I built for my current
        Arch Linux, i3wm and Polybar environment.

        There are currently 2 themes. Arboria is a minimalist, forest green
        set up using i3wm, dunst and polybar. Feówerscýte is an iteration upon
        Arboria and is stark, monochrome and makes heavy use of the Geometric
        Shapes unicode block for system notifications.

        Antimber also has a central install script used to quickly install or
        switch the currently used theme.
  externals:
    source: https://github.com/autophagy/antimber

completable-futures:
  name: Completable Futures
  brief: Writing
  project: true
  status: Ongoing
  head: Completable Futures is a blog for miscellaneous writing.
  body: |
        Completable Futures is an ongoing project where I put writing on topics
        like tech, labour politics, automation and cyberpunk. It also uses a
        custom built Wordpress theme called
        [GEÞEODAN :: https://github.com/completablefutures/wordpress-theme :: Homeostat].
  externals:
    website: https://completablefutures.org/

hwaete:
  name: Hwǽte
  brief: Bread Diary
  project: true
  status: Ongoing
  head: Hwǽte is a project to document my bread baking.
  body: |
        [BILIÞ]
        [logo.png :: a logo for the time being]

        Hwǽte was a blog started in Snáw 225 to document my bread baking. Since
        then, it has expanded to encompass anything involving dough, wheat or
        baking generally. Most of the recipes or inspiration come from Rose Levy
        Beranbaum's The Bread Bible and Ken Forkish's Flour Water Salt Yeast.

        It is created using the [GEÞEODAN :: https://jekyllrb.com/ :: Jekyll]
        static site generation framework.
  externals:
      source: https://github.com/autophagy/hwaete
      website: http://hwaete.autophagy.io/

avari:
  name: Avari
  brief: Wordpress Theme
  project: true
  status: Released
  head: Avari is a minimalist, emerald green wordpress theme.
  body: |
        Avari is a custom built 2-column Wordpress theme built for
        [GEÞEODAN :: http://mccaine.org/ :: Notes and Commentaries], with an
        emphasis on minimal design, typography and legibility.

        [BILIÞ]
        [screenshot.png :: An example of Avari in action]

        It also features a very cute owl.
  externals:
    source: https://github.com/autophagy/avari-wp-theme

mainframe:
  name: MAINFRAME
  brief: Cyberpunk Game
  project: true
  status: 1.0
  head: MAINFRAME is a web game, inspired by Warioware and bad 90s movies about hacking.
  body: |
        MAINFRAME is a tongue-in-cheek cyberpunk game about cracking the
        mainframes of various Corps through a series of quick minigames loosely
        based on hacking techniques. Make 3 mistakes, and you burn through
        all your proxies and come face to face with every hacker's nightmare:
        black ICE.

        The game was made over several months with the
        [GEÞEODAN :: https://phaser.io/ :: Phaser] HTML5 game framework. It was
        featured in Rock, Paper, Shotgun's
        [GEÞEODAN :: https://www.rockpapershotgun.com/2016/02/27/best-free-games-of-the-week-13/ :: best free games of the week].
  externals:
    source: https://github.com/autophagy/mainframe
    website: https://autophagy.itch.io/mainframe

multitimer:
  name: Multi/Timer
  brief: Egg Timers
  project: true
  status: 2.0
  head: Multi/Timer is a tool for timing multiple cooking processes simultaneously.
  body: |
        Multi/Timer is a tool I built while at Chaos Communication Camp 2015,
        born out of frustration with the age and jankyness of a lot of the
        timing applications I used while cooking, and has become a tool that I
        use nearly every day.

        It was created in order to enable me to time multiple cooking processes
        at once, while being able to view their progress as one whole. It has
        gone under a few redesigns, and has been a useful exercise in UI design.
  externals:
    source: https://github.com/autophagy/multitimer
    website: http://multitimer.io/

twitter-bg-restorer:
  name: Twitter Bg Restorer
  brief: Chrome Extension
  project: true
  status: 2.0.3
  head: Twitter Bg Restorer is a chrome extension to restore Twitter's background.
  body: |
        The extension was created when Twitter removed the ability to set the
        background image/colour of the homepage in 2015, instead giving everyone
        a boring, eye-searing white background. Given Twitter's monumental
        whitespace, this made looking at the timeline difficult.

        There also exists a version for Mozilla Firefox.

        It has been featured in
        [GEÞEODAN :: https://www.theguardian.com/technology/2015/jul/21/twitter-removes-background-images-timeline-fix-chrom-plugin :: The Guardian],
        [GEÞEODAN :: https://venturebeat.com/2015/07/21/as-twitter-turns-off-timeline-background-images-one-developer-has-already-built-a-workaround/ :: VentureBeat]
        [GEÞEODAN :: https://www.gizmodo.jp/2015/07/_twitter_2.html :: Gizmodo] and
        [GEÞEODAN :: http://www.lifehacker.co.uk/2015/07/21/how-to-get-your-background-wallpaper-back-on-twitter :: Lifehacker].
  externals:
    source: https://github.com/autophagy/twitter-bg-restorer
    chrome web store: https://chrome.google.com/webstore/detail/twitter-background-restor/gcjejnlljikllkloanankijokfbaelhi
    firefox add-ons: https://addons.mozilla.org/en-US/firefox/addon/twitter-background-restorer/
